{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 AvenirNext-Regular;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red29\green114\blue66;\red27\green31\blue34;\red29\green114\blue66;
\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21840\viewh11860\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs28 \cf0 \expnd0\expndtw0\kerning0
Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet\
\
This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.\
\
In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.\
\
For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.\
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.\
\
\
\
Part 1: Yelp Dataset Profiling and Understanding\
\
1. Profile the data by finding the total number of records for each of the tables below:\
	\
i. Attribute table = 10000\
ii. Business table = 10000\
iii. Category table = 10000\
iv. Checkin table = 10000\
v. elite_years table = 10000\
vi. friend table = 10000\
vii. hours table = 10000\
viii. photo table = 10000\
ix. review table = 10000\
x. tip table = 10000\
xi. user table = 10000\
\
SQL code used to arrive at answer:\
select count(*) from attribute;\
select count(*) from business;\
select count(*) from category;\
select count(*) from checkin;\
select count(*) from elite_years;\
select count(*) from friend;\
select count(*) from hours;\
select count(*) from photo;\
select count(*) from review;\
select count(*) from tip;\
select count(*) from user;\
\
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.\
\
i. Business = id: 10000\
ii. Hours = business_id: 1562\
iii. Category = business_id: 2643\
iv. Attribute = business_id: 1115\
v. Review = business_id: 8090, user_id: 9581, id: 10000\
vi. Checkin = business_id: 493 \
vii. Photo = id: 10000, business_id: 6493\
viii. Tip = business_id: 3979, user_id: 537\
ix. User = id: 10000\
x. Friend =  user_id: 11\
xi. Elite_years = user_id: 2780\
\
Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	\
\
SQL code used to arrive at answer:\
select count(distinct id) from business;\
select count(distinct business_id) from hours;\
select count(distinct business_id) from category;\
select count(distinct business_id) from attribute;\
select count(distinct business_id) from review;\
select count(distinct business_id) from checkin;\
select count(distinct id) from photo;\
select count(distinct business_id) from tip;\
select count(distinct id) from user;\
select count(distinct user_id) from friend;\
select count(distinct user_id) from elite_years;\
\
3. Are there any columns with null values in the Users table? Indicate "yes," or "no."\
\
	Answer: no\
	\
	\
	SQL code used to arrive at answer:\
\
SELECT COUNT(*)\
FROM user\
WHERE id IS NULL OR \
name IS NULL OR \
review_count IS NULL OR \
yelping_since IS NULL OR\
useful IS NULL OR \
funny IS NULL OR \
cool IS NULL OR \
fans IS NULL OR \
average_stars IS NULL OR \
compliment_hot IS NULL OR \
compliment_more IS NULL OR \
compliment_profile IS NULL OR \
compliment_cute IS NULL OR \
compliment_list IS NULL OR \
compliment_note IS NULL OR \
compliment_plain IS NULL OR \
compliment_cool IS NULL OR \
compliment_funny IS NULL OR \
compliment_writer IS NULL OR \
compliment_photos IS NULL;\
	\
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:\
\
	i. Table: Review, Column: Stars\
	\
		min: 1		max: 5	avg: 3.7082\
		\
	\
	ii. Table: Business, Column: Stars\
	\
		min: 1		max: 5	avg: 3.6549\
		\
	\
	iii. Table: Tip, Column: Likes\
	\
		min: 0		max: 2	avg: 0.0144\
		\
	\
	iv. Table: Checkin, Column: Count\
	\
		min: 1		max: 53	avg: 1.9414\
		\
	\
	v. Table: User, Column: Review_count\
	\
		min: 0		max: 2000	avg: 24.2995\
		\
\
\
5. List the cities with the most reviews in descending order:\
\
	SQL code used to arrive at answer:\
\
SELECT city,\
SUM(review_count) AS reviews\
FROM business\
GROUP BY city\
ORDER BY reviews DESC;\
	\
	\
	Copy and Paste the Result Below:\
\
\pard\pardeftab720

\f1 \cf2 \expnd0\expndtw0\kerning0
+-----------------+---------+\
| city            | reviews |\
+-----------------+---------+\
| Las Vegas       |   82854 |\
| Phoenix         |   34503 |\
| Toronto         |   24113 |\
| Scottsdale      |   20614 |\
| Charlotte       |   12523 |\
| Henderson       |   10871 |\
| Tempe           |   10504 |\
| Pittsburgh      |    9798 |\
| Montr\'e9al        |    9448 |\
| Chandler        |    8112 |\
| Mesa            |    6875 |\
| Gilbert         |    6380 |\
| Cleveland       |    5593 |\
| Madison         |    5265 |\
| Glendale        |    4406 |\
| Mississauga     |    3814 |\
| Edinburgh       |    2792 |\
| Peoria          |    2624 |\
| North Las Vegas |    2438 |\
| Markham         |    2352 |\
| Champaign       |    2029 |\
| Stuttgart       |    1849 |\
| Surprise        |    1520 |\
| Lakewood        |    1465 |\
| Goodyear        |    1155 |\
+-----------------+---------+\
(Output limit exceeded, 25 of 362 total rows shown)
\f0 \cf0 \expnd0\expndtw0\kerning0
\
	\
\
	\
6. Find the distribution of star ratings to the business in the following cities:\
\
i. Avon\
\
SQL code used to arrive at answer:\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
\
SELECT stars,\
SUM(review_count) AS reviews\
FROM business\
WHERE city = 'Avon'\
GROUP BY stars;	\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\
Copy and Paste the Resulting Table Below (2 columns \'96 star rating and count):\
\
\pard\pardeftab720

\f1 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 +-------+---------+\
| stars | reviews |\
+-------+---------+\
|   1.5 |      10 |\
|   2.5 |       6 |\
|   3.5 |      88 |\
|   4.0 |      21 |\
|   4.5 |      31 |\
|   5.0 |       3 |\
+-------+---------+
\f0 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf0 \
ii. Beachwood\
\
SQL code used to arrive at answer:\
\
SELECT stars,\
SUM(review_count) AS reviews\
FROM business\
WHERE city = 'Beachwood'\
GROUP BY stars;	\
\
Copy and Paste the Resulting Table Below (2 columns \'96 star rating and count):\
\
\pard\pardeftab720
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1 \cf2 \expnd0\expndtw0\kerning0
+-------+---------+\
| stars | reviews |\
+-------+---------+\
|   2.0 |       8 |\
|   2.5 |       3 |\
|   3.0 |      11 |\
|   3.5 |       6 |\
|   4.0 |      69 |\
|   4.5 |      17 |\
|   5.0 |      23 |\
+-------+---------+
\f0 \cf0 \expnd0\expndtw0\kerning0
\
\
7. Find the top 3 users based on their total number of reviews:\
		\
	SQL code used to arrive at answer:\
\
SELECT name,review_count\
FROM user\
ORDER BY review_count DESC\
LIMIT 3;\
		\
	Copy and Paste the Result Below:\
		\
\pard\pardeftab720

\f1 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 +--------+--------------+\
| name   | review_count |\
+--------+--------------+\
| Gerald |         2000 |\
| Sara   |         1629 |\
| Yuri   |         1339 |\
+--------+--------------+
\f0 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf0 \
8. Does posing more reviews correlate with more fans?\
\
	Please explain your findings and interpretation of the results: \expnd0\expndtw0\kerning0
Likely, though \'93yelping_since\'94 may be a confounding variable.\expnd0\expndtw0\kerning0
 See output below.\
	\
SELECT name,review_count,fans,yelping_since\
FROM user\
ORDER BY fans DESC;\
\pard\pardeftab720

\f1 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 +-----------+--------------+------+---------------------+\
| name      | review_count | fans | yelping_since       |\
+-----------+--------------+------+---------------------+\
| Amy       |          609 |  503 | 2007-07-19 00:00:00 |\
| Mimi      |          968 |  497 | 2011-03-30 00:00:00 |\
| Harald    |         1153 |  311 | 2012-11-27 00:00:00 |\
| Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |\
| Christine |          930 |  173 | 2009-07-08 00:00:00 |\
| Lisa      |          813 |  159 | 2009-10-05 00:00:00 |\
| Cat       |          377 |  133 | 2009-02-05 00:00:00 |\
| William   |         1215 |  126 | 2015-02-19 00:00:00 |\
| Fran      |          862 |  124 | 2012-04-05 00:00:00 |\
| Lissa     |          834 |  120 | 2007-08-14 00:00:00 |\
| Mark      |          861 |  115 | 2009-05-31 00:00:00 |\
| Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |\
| bernice   |          255 |  105 | 2007-08-29 00:00:00 |\
| Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |\
| Angela    |          694 |  101 | 2010-10-01 00:00:00 |\
| .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |\
| Ben       |          307 |   96 | 2007-03-10 00:00:00 |\
| Linda     |          584 |   89 | 2005-08-07 00:00:00 |\
| Christina |          842 |   85 | 2012-10-08 00:00:00 |\
| Jessica   |          220 |   84 | 2009-01-12 00:00:00 |\
| Greg      |          408 |   81 | 2008-02-16 00:00:00 |\
| Nieves    |          178 |   80 | 2013-07-08 00:00:00 |\
| Sui       |          754 |   78 | 2009-09-07 00:00:00 |\
| Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |\
| Nicole    |          161 |   73 | 2009-04-30 00:00:00 |\
+-----------+--------------+------+---------------------+\
(Output limit exceeded, 25 of 10000 total rows shown)\

\f0 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf0 9. Are there more reviews with the word "love" or with the word "hate" in them?\
\
	Answer: There are more reviews with the word \'93love\'94 (n=1780) than the word \'93hate\'94 (n=232).\
	\
	SQL code used to arrive at answer:\
\
SELECT COUNT(*)\
FROM review\
WHERE text LIKE "%love%";\
\
SELECT COUNT(*)\
FROM review\
WHERE text LIKE \'93%hate%\'94;\
\
10. Find the top 10 users with the most fans: See results below.\
\
	SQL code used to arrive at answer:\
	\
SELECT name,fans\
FROM user\
ORDER BY fans DESC\
LIMIT 10;\
	\
	Copy and Paste the Result Below:\
\
\pard\pardeftab720

\f1 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 +-----------+------+\
| name      | fans |\
+-----------+------+\
| Amy       |  503 |\
| Mimi      |  497 |\
| Harald    |  311 |\
| Gerald    |  253 |\
| Christine |  173 |\
| Lisa      |  159 |\
| Cat       |  133 |\
| William   |  126 |\
| Fran      |  124 |\
| Lissa     |  120 |\
+-----------+------+
\f0 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 	\
\pard\pardeftab720
\cf0 	\
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as \'93useful\'94 or \'93funny\'94?\
\
Key:\
0% - 25% - Low relationship\
26% - 75% - Medium relationship\
76% - 100% - Strong relationship\
	\
	SQL code used to arrive at answer:\
\
SELECT name,fans,useful,funny,review_count,yelping_since\
FROM user\
ORDER BY fans DESC;	\
	\
	Copy and Paste the Result Below:\
\pard\pardeftab720

\f1 \cf2 \expnd0\expndtw0\kerning0
+-----------+------+--------+--------+--------------+---------------------+\
| name      | fans | useful |  funny | review_count | yelping_since       |\
+-----------+------+--------+--------+--------------+---------------------+\
| Amy       |  503 |   3226 |   2554 |          609 | 2007-07-19 00:00:00 |\
| Mimi      |  497 |    257 |    138 |          968 | 2011-03-30 00:00:00 |\
| Harald    |  311 | 122921 | 122419 |         1153 | 2012-11-27 00:00:00 |\
| Gerald    |  253 |  17524 |   2324 |         2000 | 2012-12-16 00:00:00 |\
| Christine |  173 |   4834 |   6646 |          930 | 2009-07-08 00:00:00 |\
| Lisa      |  159 |     48 |     13 |          813 | 2009-10-05 00:00:00 |\
| Cat       |  133 |   1062 |    672 |          377 | 2009-02-05 00:00:00 |\
| William   |  126 |   9363 |   9361 |         1215 | 2015-02-19 00:00:00 |\
| Fran      |  124 |   9851 |   7606 |          862 | 2012-04-05 00:00:00 |\
| Lissa     |  120 |    455 |    150 |          834 | 2007-08-14 00:00:00 |\
| Mark      |  115 |   4008 |    570 |          861 | 2009-05-31 00:00:00 |\
| Tiffany   |  111 |   1366 |    984 |          408 | 2008-10-28 00:00:00 |\
| bernice   |  105 |    120 |    112 |          255 | 2007-08-29 00:00:00 |\
| Roanna    |  104 |   2995 |   1188 |         1039 | 2006-03-28 00:00:00 |\
| Angela    |  101 |    158 |    164 |          694 | 2010-10-01 00:00:00 |\
| .Hon      |  101 |   7850 |   5851 |         1246 | 2006-07-19 00:00:00 |\
| Ben       |   96 |   1180 |   1155 |          307 | 2007-03-10 00:00:00 |\
| Linda     |   89 |   3177 |   2736 |          584 | 2005-08-07 00:00:00 |\
| Christina |   85 |    158 |     34 |          842 | 2012-10-08 00:00:00 |\
| Jessica   |   84 |   2161 |   2091 |          220 | 2009-01-12 00:00:00 |\
| Greg      |   81 |    820 |    753 |          408 | 2008-02-16 00:00:00 |\
| Nieves    |   80 |   1091 |    774 |          178 | 2013-07-08 00:00:00 |\
| Sui       |   78 |      9 |     18 |          754 | 2009-09-07 00:00:00 |\
| Yuri      |   76 |   1166 |    220 |         1339 | 2008-01-03 00:00:00 |\
| Nicole    |   73 |     13 |     10 |          161 | 2009-04-30 00:00:00 |\
+-----------+------+--------+--------+--------------+---------------------+\
(Output limit exceeded, 25 of 10000 total rows shown)
\f0 \cf0 \expnd0\expndtw0\kerning0
	\
	\
	Please explain your findings and interpretation of the results:\
	\
It looks like there\'92s a correlation, between having a high # of fans and being listed as useful and funny. To define the correlation, I would have to do find the correlation coefficient. The top 10 users with highest # of fans are listed as useful and funny, I\'92m not sure if this answers the second question.\
	\
\
Part 2: Inferences and Analysis\
\
1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.\
	\
i. Do the two groups you chose to analyze have a different distribution of hours?\
\
Yes, food businesses in Toronto with 4-5 stars generally have fewer opening hours than business with 2-3 stars.\
\
ii. Do the two groups you chose to analyze have a different number of reviews?\
 \
 Yes, 4-5 star businesses have higher number of reviews compared to 2-3 star business.\
         \
iii. Are you able to infer anything from the location data provided between these two groups? Explain.\
\
Unfortunately no, there are 3 businesses total in the category + city I chose, the dataset is not big enough to draw any inferences.\
\
SQL code used for analysis:\
\
SELECT b.name, b.review_count, h.hours, b.postal_code, b.address, c.category,\
			   CASE\
				  WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'\
				  WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'\
			   END AS star_rating\
		FROM business b INNER JOIN hours h ON b.id = h.business_id\
		INNER JOIN category c ON c.business_id = b.id\
		WHERE (b.city == 'Toronto'AND c.category LIKE 'food') AND (b.stars BETWEEN 2 AND 3 OR b.stars BETWEEN 4 AND 5)\
		GROUP BY stars, hours\
		ORDER BY star_rating ASC;		\
		\
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.\
		\
i. Difference 1:\
\
The # of businesses open are at least 5 times more than those that are closed.         \
         \
ii. Difference 2:\
\
There\'92s an average higher star rating for those that are still open.\
         \
         \
SQL code used for analysis:\
\
SELECT COUNT(DISTINCT(id)),\
			   SUM(stars),\
			   AVG(stars),\
			   is_open\
		FROM business\
		GROUP BY is_open;\
	\
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.\
\
Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:\
	\
i. Indicate the type of analysis you chose to do:\
\
Analyzing what contributes to the overall rating of a restaurant. \
         \
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:\
\
I hypothesize that review counts or # of hours may have a role in contributing to overall rating of a restaurant. Therefore, I would need data on restaurant name, review count, star rating, and hours open. In my analysis, I wanted to specifically compare restaurants that receive lower than 2.0 stars VS those that receive 4.5 stars and above. It doesn\'92t seem like the # of reviews is a major contributing factor to both groups. One of my outstanding findings (see output below) include a strong relationship between star rating & # of opening hours. High rated (4.0+) restaurants tend to open fewer hours than low rated (<2.5) restaurants. \
                  \
iii. Output of your finished dataset:\
\
\pard\pardeftab720

\f1\fs24 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 +----------------------------------------+--------------+-------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+\
| name                                   | review_count | stars | monday_hours | tuesday_hours | wednesday_hours | thursday_hours | friday_hours | saturday_hours | sunday_hours |\
+----------------------------------------+--------------+-------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+\
| McDonald's                             |            8 |   2.0 | 5:00-23:00   | 5:00-23:00    | 5:00-23:00      | 5:00-23:00     | 5:00-0:00    | 5:00-0:00      | 5:00-23:00   |\
| Loblaws                                |           10 |   2.5 | 8:00-22:00   | 8:00-22:00    | 8:00-22:00      | 8:00-22:00     | 8:00-22:00   | 8:00-22:00     | 8:00-22:00   |\
| Sweet Ruby Jane Confections            |           30 |   4.0 | 10:00-19:00  | 10:00-19:00   | 10:00-19:00     | 10:00-19:00    | 10:00-19:00  | 10:00-19:00    | None         |\
| The Cider Mill                         |           91 |   4.0 | 10:00-18:00  | 10:00-18:00   | 10:00-18:00     | 10:00-20:00    | 10:00-20:00  | 10:00-20:00    | 11:00-16:00  |\
| Koko Bakery                            |          162 |   4.0 | 9:00-20:00   | None          | 9:00-20:00      | 9:00-20:00     | 9:00-20:00   | 9:00-20:00     | 9:00-20:00   |\
| Bootleggers Modern American Smokehouse |          431 |   4.0 | 11:00-22:00  | 11:00-22:00   | 11:00-22:00     | 11:00-22:00    | 11:00-22:00  | 11:00-22:00    | 11:00-22:00  |\
| B.A. Sweetie Candy                     |           49 |   4.0 | 10:00-20:00  | 10:00-20:00   | 10:00-20:00     | 10:00-20:00    | 10:00-20:00  | 10:00-20:00    | 11:00-17:00  |\
| Charlie D's Catfish & Chicken          |            7 |   4.5 | 11:00-18:00  | 11:00-18:00   | 11:00-18:00     | 11:00-18:00    | 11:00-18:00  | 11:00-18:00    | 13:00-16:00  |\
+----------------------------------------+--------------+-------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+
\f0\fs28 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf0 iv. Provide the SQL code you used to create your final dataset:\
\
SELECT   B.name,\
			   B.review_count,\
			   B.stars,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%monday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS monday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%tuesday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS tuesday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%wednesday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS wednesday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%thursday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS thursday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%friday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS friday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%saturday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS saturday_hours,\
			   MAX(CASE\
			   WHEN H.hours LIKE "%sunday%" THEN TRIM(H.hours,'%MondayTuesWednesThursFriSatSun|%') \
			   END) AS sunday_hours\
		FROM business B\
		INNER JOIN hours H\
		ON B.id = H.business_id\
		INNER JOIN category C\
		ON B.id = C.business_id\
		INNER JOIN attribute A\
		ON B.id = A.business_id\
		WHERE (B.stars <= 2.5 OR B.stars >= 4.0)\
		AND C.category LIKE '%food%' OR '%coffee%' OR '%sandwiches%' OR '%restaurants%'\
		GROUP BY B.id, B.stars\
		ORDER BY B.stars ASC;}